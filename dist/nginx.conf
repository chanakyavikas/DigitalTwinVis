# Inspired by https://github.com/cloudfoundry-community/nginx-buildpack
worker_processes 1;
daemon off;

env VCAP_SERVICES;
env REDIS;

error_log <%= ENV["APP_ROOT"] %>/openresty/nginx/logs/error.log debug;
events { worker_connections 1024; }

http
{
    log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
    access_log <%= ENV["APP_ROOT"] %>/openresty/nginx/logs/access.log cloudfoundry;

    # Define the MIME types for files.
    include       mime.types;
    sendfile on;

    include gzip.types;
    etag on;
    tcp_nopush on;
    keepalive_timeout 30;

    default_type  application/octet-stream;

    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
    # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
    # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;


    server
    {
        set     $session_name                       "tutorial-vis-session";
        set     $session_secret                     <%= ENV["SESSION_SECRET"] %>;
        set     $client_id                          "tutorial-user";
        set     $uaa_authorization_header           "Basic <%= ENV["UAA_AUTHORIZATION"] %>";
        set     $user_token                         'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI5YTdhZDlkZWViMmY0M2QwOTdiMTJjYTlmM2YwZjYxNCIsInN1YiI6ImI4NGRhZmJiLTI5NjAtNDc5MC04Y2JjLTliYjRkMDFjMGQwYiIsInNjb3BlIjpbInR1dG9yaWFsLnVzZXIiXSwiY2xpZW50X2lkIjoidHV0b3JpYWwtdXNlciIsImNpZCI6InR1dG9yaWFsLXVzZXIiLCJhenAiOiJ0dXRvcmlhbC11c2VyIiwiZ3JhbnRfdHlwZSI6InBhc3N3b3JkIiwidXNlcl9pZCI6ImI4NGRhZmJiLTI5NjAtNDc5MC04Y2JjLTliYjRkMDFjMGQwYiIsIm9yaWdpbiI6InVhYSIsInVzZXJfbmFtZSI6InR1dG9yaWFsLXVzZXIiLCJlbWFpbCI6InR1dG9yaWFsLXVzZXJAdHV0b3JpYWwtdXNlci5jb20iLCJhdXRoX3RpbWUiOjE0ODYwOTg2OTksInJldl9zaWciOiI3Mzg4OWRkMyIsImlhdCI6MTQ4NjA5ODY5OSwiZXhwIjoyNzgyMDk4Njk5LCJpc3MiOiJodHRwczovL2NlMzBhNWNhLTljMmEtNDFmNy05Y2VkLWJlOTczNjBlYjI4Mi5wcmVkaXgtdWFhLnJ1bi5hd3MtdXN3MDItcHIuaWNlLnByZWRpeC5pby9vYXV0aC90b2tlbiIsInppZCI6ImNlMzBhNWNhLTljMmEtNDFmNy05Y2VkLWJlOTczNjBlYjI4MiIsImF1ZCI6WyJ0dXRvcmlhbCIsInR1dG9yaWFsLXVzZXIiXX0.jCR76i-tkbQTbOnmED5K85I0CiGdmvJi-pLrOFh_MR38xDV7oIX08zEJBgQM-tRKzVhZpEdr78RaJQBNO1pviaLjlugNZogykCHbAEjJzjAP0oZ8in88KUM5evrNkotfQ4g933-652-bmmd89bEdrTy--d5mEK1qKFze4uzpP9KkMGBjRq9sHa36KRVJt9IkONeqkaauG45pl2C_pL8W-8LdZzqMyxjoIT6P57Tmn0O3zcZ3u7W2MCZ8-tkX2qXfXNDOXvBeHegQwJrnuNF5S6iggfB9S5doe-KCKnoQ7awPeFCSJHxh9jrTe8p-_GD4raJlFaF4e16qHi9S52D-bw';


        listen <%= ENV["PORT"] %>;
        server_name localhost;

        #Open File cache
        open_file_cache          max=2000 inactive=20s;
        open_file_cache_valid    60s;
        open_file_cache_min_uses 5;
        open_file_cache_errors   off;

        root <%= ENV["APP_ROOT"] %>/public/www;

        #nginx_status
        location /nginx_status {
            stub_status   on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }

        # Don't allow any access to hidden files
        location ~ /\. { deny  all; }

        location ~* \.\w+$ {
            try_files $uri $uri/ 404;
            expires 1d;
        }

        ## Login Routes
        location /login {
            access_by_lua '
            local state = "/about"
            if ngx.req.get_uri_args()["state"] ~= nil then
                state = ngx.req.get_uri_args()["state"]
            end
            local authorization_url = "<%=ENV["UAA_SERVER_URL"]%>/oauth/authorize?response_type=code&client_id="..ngx.var.client_id.."&redirect_uri=https%3A%2F%2F"..ngx.var.host.."%2Fcallback&state="..state
            return ngx.redirect(authorization_url)
            ';
        }

        location /callback {
            rewrite_by_lua_file <%= ENV["APP_ROOT"] %>/get_access_token.lua;
        }

        # Internal access token
        location /_internal/_access_token
        {
            proxy_set_header    Content-Type    application/x-www-form-urlencoded;
            proxy_set_header    Authorization   $uaa_authorization_header;
            proxy_pass          <%= ENV["UAA_SERVER_URL"] %>/oauth/token;
        }

        location /logout
        {
            access_by_lua '
                local common = require("common");
                common.remove_session()
                local logout_server_url = "<%= ENV["UAA_SERVER_URL"] %>/logout?redirect=https://"..ngx.var.host
                return ngx.redirect(logout_server_url)
            ';
        }

        ## User Routes
        location /userinfo
        {
            add_header Cache-Control "private";
            expires off;

            default_type 'application/json';
            content_by_lua '
                local common = require("common");
                ngx.say(common.get_current_user_info())
            ';
        }

        # Internal url to get user information
        location /_internal/_userinfo
        {
            proxy_set_header    Content-Type    application/x-www-form-urlencoded;
            proxy_set_header    Authorization   $uaa_authorization_header;
            proxy_pass          <%= ENV["UAA_SERVER_URL"] %>/check_token;
        }

        # Any Api Call made should have bearer token set using set_access_token.lua file
        location /api {
            access_by_lua_file <%= ENV["APP_ROOT"] %>/set_access_token.lua;
            proxy_set_header Authorization $user_token;

            location /api/asset {
              proxy_pass https://digital-twin-dt-tutorial-asset.run.aws-usw02-pr.ice.predix.io;
              rewrite /api/asset(.*) /asset$1 break;
            }

            location /api/result {
              proxy_pass https://digital-twin-dt-tutorial-result-persistence.run.aws-usw02-pr.ice.predix.io;
              rewrite /api/result(.*) /api/analyticResults$1 break;
            }
        }

        location /ws {
            access_by_lua_file <%= ENV["APP_ROOT"] %>/set_access_token.lua;
            proxy_http_version 1.1;
            proxy_set_header Authorization $user_token;
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade $http_upgrade;
            proxy_read_timeout 120s;

            location /ws/result {
              proxy_pass https://digital-twin-dt-tutorial-result-persistence.run.aws-usw02-pr.ice.predix.io;
              rewrite /ws/result(.*) /ws$1 break;
            }
        }

        location / {
            # For HTML5 Support, Serve index.html for any other endpoint
            index index.html index.htm Default.htm;
            try_files $uri $uri/ /index.html;

            <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
            autoindex on;
            <% end %>


            # <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
            # 	autoindex on;
            # <% end %>
        }


    }
}
